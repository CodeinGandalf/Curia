<launch>
  <!-- Starte den LIDAR-Node -->
  <include file="$(find rplidar_ros)/launch/rplidar_a1.launch" />

  <!--node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find rplidar_ros)/rviz/rplidar.rviz" /-->

   <!-- Laser Filter Node -->
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="scan_filter">
    <rosparam command="load" file="$(find dose_sammler)/config/scan_filter.yaml"/>
    <remap from="scan" to="/scan"/>
    <remap from="scan_filtered" to="/scan_filtered"/>

  </node>
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_to_base_link"
        args="-0.164 0.166 0.13 0 0 0 base_link laser" />

    <!-- Starte GMapping für SLAM -->
  <!--node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="log">
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="odom"/>
    <param name="map_update_interval" value="1.0"/>
    <param name="maxUrange" value="5.0"/>
    <param name="minimumScore" value="300"/>
    <param name="maxRange" value="6.0"/>
    <param name="linearUpdate" value="0."/>
    <param name="angularUpdate" value="0.2"/>
    <param name="xmin" value="-3"/>
    <param name="ymin" value="-3"/>
    <param name="xmax" value="3"/>
    <param name="ymax" value="3"/>
    <param name="delta" value="0.02"/>
    <param name="particles" value="30"/>
    <param name="iterations" value="3"/>
    <param name="lstep" value="0.05"/>
    <param name="temporalUpdate" value="10.0"/>
    <remap from="scan" to="/scan_filtered"/>
  </node-->

  <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="log">
    <param name="map_update_interval" value="2.0" /> <!-- Weniger häufiges Kartenupdate für Performance -->
    <param name="maxUrange" value="5.0" /> <!-- Muss zum LiDAR passen -->
    <param name="maxRange" value="5.5" /> <!-- Etwas über maxUrange für Puffer -->
    <param name="minimumScore" value="200" /> <!-- Höher für bessere Kartengenauigkeit -->

    <param name="linearUpdate" value="0.1" /> <!-- Weniger oft neue Scans bei kleinen Bewegungen -->
    <param name="angularUpdate" value="0.15" />
    <param name="temporalUpdate" value="2.0" />

    <param name="particles" value="40" /> <!-- Reduziert für Performance -->
    <param name="resampleThreshold" value="0.5" /> <!-- Frühzeitigeres Resampling -->

    <param name="xmin" value="-3" />
    <param name="ymin" value="-3" />
    <param name="xmax" value="3" />
    <param name="ymax" value="3" />
    <param name="delta" value="0.02" /> <!-- Kartenauflösung: 5cm pro Zelle -->

    <param name="iterations" value="5" /> <!-- Rechenaufwand reduzieren -->
    <param name="lstep" value="0.05" />
    <param name="srr" value="0.1" /> <!-- Odometriedrift-Unsicherheit (Rotation durch Translation) -->
    <param name="srt" value="0.2" /> <!-- Odometriedrift-Unsicherheit (Translation durch Rotation) -->
    <param name="str" value="0.1" /> <!-- ... -->
    <param name="stt" value="0.4" /> <!-- ... -->
  </node>
  <!-- Starte dein Hauptprogramm (main.py als ROS-Node, wenn du das willst) -->
  <node pkg="dose_sammler" type="main.py" name="dose_sammler_node" output="screen" />

  <!-- Tastatur-Node -->
  <node pkg="dose_sammler" type="keyboard_control.py" name="keyboard_control_node" output="screen" />

  <node pkg="dose_sammler" type="encoder_odometry.py" name="encoder_odom_node" output="screen" />
  
  <!-- node pkg="dose_sammler" type="frontier_exploration.py" name="frontier_exploration" output="screen" / -->
  
</launch>
